#!/bin/bash

#======================================================================
# AJUDA PRO ‚Äì Menu interativo de comandos para Arch Linux
# Autor: Guilherme (github.com/guilherme-meloni)
# Vers√£o: 2.0 (com fzf, cores e √≠cones)
# Data: 11/06/2025
# Descri√ß√£o: Menu interativo com fzf para consulta r√°pida de comandos.
# Requisitos: fzf, Nerd Fonts
#======================================================================

# ----------------------------------------------------------------------
#  üé® PALETA DE CORES (CATPPUCCIN MACCHIATO) E √çCONES ÔÜå
# ----------------------------------------------------------------------
# Usamos printf para definir cores 24-bit (True Color) no terminal
# Formato: \e[38;2;R;G;Bm (foreground)
# Os valores RGB foram convertidos dos seus hexadecimais.

# Cores
ROSEWATER=$(printf '\e[38;2;244;219;214m')
FLAMINGO=$(printf '\e[38;2;240;198;198m')
PINK=$(printf '\e[38;2;245;189;230m')
MAUVE=$(printf '\e[38;2;198;160;246m') # Cor principal para t√≠tulos
RED=$(printf '\e[38;2;237;135;150m')
PEACH=$(printf '\e[38;2;245;169;127m')
YELLOW=$(printf '\e[38;2;238;212;159m')
GREEN=$(printf '\e[38;2;166;218;149m')
BLUE=$(printf '\e[38;2;138;173;244m')   # Cor para comandos
LAVENDER=$(printf '\e[38;2;183;189;248m')
TEXT=$(printf '\e[38;2;202;211;245m')   # Cor de texto principal
SUBTEXT0=$(printf '\e[38;2;165;173;203m') # Cor para descri√ß√µes/coment√°rios
RESET=$(printf '\e[0m')                 # Reseta para a cor padr√£o

# √çcones (copiados da Nerd Fonts Cheat Sheet)
ICON_ARCH='ÔåÉ'
ICON_PACKAGE='üì¶'
ICON_AUR='üß©'
ICON_INFO='üñ•Ô∏è'
ICON_FILES='üìÇ'
ICON_NETWORK='üåê'
ICON_GIT='ÓóΩ'
ICON_SERVICE='üõ†Ô∏è'
ICON_CONFIG='üîß'
ICON_ZSH='üîå'
ICON_YAZI='üöÄ'
ICON_TMUX='Û∞Üç'
ICON_EXIT='Û∞çÉ'

# ----------------------------------------------------------------------
#  ÔÄ≠ FUN√á√ïES PARA CADA SE√á√ÉO (AS "P√ÅGINAS")
# ----------------------------------------------------------------------
# Cada fun√ß√£o exibe uma categoria de ajuda.

show_pacman() {
    clear
    echo -e "${MAUVE}${ICON_PACKAGE} Pacman (reposit√≥rios oficiais):${RESET}"
    echo -e "${BLUE}sudo pacman -Syu${RESET}         ${SUBTEXT0}‚Üí Atualiza o sistema${RESET}"
    echo -e "${BLUE}sudo pacman -S nome${RESET}      ${SUBTEXT0}‚Üí Instala pacote${RESET}"
    echo -e "${BLUE}sudo pacman -Rns nome${RESET}    ${SUBTEXT0}‚Üí Remove pacote + depend√™ncias${RESET}"
    echo -e "${BLUE}pacman -Ss nome${RESET}          ${SUBTEXT0}‚Üí Procura pacote no reposit√≥rio${RESET}"
    echo -e "${BLUE}pacman -Qi nome${RESET}          ${SUBTEXT0}‚Üí Informa√ß√µes de um pacote${RESET}"
}

show_aur() {
    clear
    echo -e "${MAUVE}${ICON_AUR} AUR (com yay):${RESET}"
    echo -e "${BLUE}yay -Syu${RESET}                 ${SUBTEXT0}‚Üí Atualiza tudo (oficial + AUR)${RESET}"
    echo -e "${BLUE}yay -S nome${RESET}              ${SUBTEXT0}‚Üí Instala pacote da AUR${RESET}"
    echo -e "${BLUE}yay -Rns nome${RESET}            ${SUBTEXT0}‚Üí Remove pacote da AUR${RESET}"
    echo -e "${BLUE}yay -Ss nome${RESET}             ${SUBTEXT0}‚Üí Busca na AUR${RESET}"
}

show_git() {
    clear
    echo -e "${MAUVE}${ICON_GIT} GitHub ‚Äì Controle de Vers√£o:${RESET}"
    echo -e "${BLUE}git clone <url>${RESET}          ${SUBTEXT0}‚Üí Baixa um reposit√≥rio da internet${RESET}"
    echo -e "${BLUE}git status${RESET}               ${SUBTEXT0}‚Üí Mostra o estado atual do reposit√≥rio${RESET}"
    echo -e "${BLUE}git add .${RESET}                ${SUBTEXT0}‚Üí Prepara todos os arquivos para o commit${RESET}"
    echo -e "${BLUE}git commit -m \"msg\"${RESET}      ${SUBTEXT0}‚Üí Salva as altera√ß√µes localmente${RESET}"
    echo -e "${BLUE}git pull${RESET}                 ${SUBTEXT0}‚Üí Puxa (baixa) atualiza√ß√µes do remoto${RESET}"
    echo -e "${BLUE}git push${RESET}                 ${SUBTEXT0}‚Üí Envia seus commits para o remoto${RESET}"
    echo -e "${BLUE}git log --oneline${RESET}        ${SUBTEXT0}‚Üí V√™ o hist√≥rico de commits de forma simples${RESET}"
}

show_zsh() {
    clear
    echo -e "${MAUVE}${ICON_ZSH} Plugins ZSH ‚Äì Produtividade no terminal:${RESET}"
    echo -e "${TEXT}Comandos e atalhos dos seus plugins:${RESET}"
    echo ""
    echo -e "  ${LAVENDER}fzf (Fuzzy Finder):${RESET}"
    echo -e "  ${BLUE}Ctrl+t${RESET}                 ${SUBTEXT0}‚Üí Busca arquivos e insere no comando${RESET}"
    echo -e "  ${BLUE}Ctrl+r${RESET}                 ${SUBTEXT0}‚Üí Busca no hist√≥rico de comandos${RESET}"
    echo -e "  ${BLUE}Alt+c${RESET}                  ${SUBTEXT0}‚Üí Entra em uma pasta (fuzzy find)${RESET}"
    echo ""
    echo -e "  ${LAVENDER}zoxide (Navega√ß√£o inteligente):${RESET}"
    echo -e "  ${BLUE}z <parte_do_nome>${RESET}      ${SUBTEXT0}‚Üí Vai para a pasta mais acessada (ex: z doc)${RESET}"
    echo -e "  ${BLUE}zi${RESET}                     ${SUBTEXT0}‚Üí Abre um menu interativo (com fzf) para escolher a pasta${RESET}"
    echo ""
    echo -e "  ${LAVENDER}Plugin Git (atalhos comuns):${RESET}"
    echo -e "  ${BLUE}ga .${RESET}                   ${SUBTEXT0}‚Üí git add .${RESET}"
    echo -e "  ${BLUE}gc -m \"msg\"${RESET}           ${SUBTEXT0}‚Üí git commit -m \"msg\"${RESET}"
    echo -e "  ${BLUE}gp${RESET}                     ${SUBTEXT0}‚Üí git push${RESET}"
    echo -e "  ${BLUE}gst${RESET}                    ${SUBTEXT0}‚Üí git status${RESET}"
}

show_yazi() {
    clear
    echo -e "${MAUVE}${ICON_YAZI} Yazi ‚Äì Gerenciador de Arquivos R√°pido:${RESET}"
    echo -e "${LAVENDER}Navega√ß√£o b√°sica (use as setas ou h,j,k,l):${RESET}"
    echo -e "  ${BLUE}h ou ‚Üê${RESET}                 ${SUBTEXT0}‚Üí Vai para a pasta pai${RESET}"
    echo -e "  ${BLUE}l ou ‚Üí${RESET}                 ${SUBTEXT0}‚Üí Entra na pasta ou abre o arquivo${RESET}"
    echo -e "  ${BLUE}j ou ‚Üì${RESET}                 ${SUBTEXT0}‚Üí Move o cursor para baixo${RESET}"
    echo -e "  ${BLUE}k ou ‚Üë${RESET}                 ${SUBTEXT0}‚Üí Move o cursor para cima${RESET}"
    echo ""
    echo -e "  ${LAVENDER}Opera√ß√µes com arquivos:${RESET}"
    echo -e "  ${BLUE}y${RESET}                      ${SUBTEXT0}‚Üí Copia o arquivo selecionado${RESET}"
    echo -e "  ${BLUE}d${RESET}                      ${SUBTEXT0}‚Üí Marca para deletar (corta)${RESET}"
    echo -e "  ${BLUE}p${RESET}                      ${SUBTEXT0}‚Üí Cola os arquivos copiados/cortados${RESET}"
    echo -e "  ${BLUE}r${RESET}                      ${SUBTEXT0}‚Üí Renomeia o arquivo selecionado${RESET}"
    echo -e "  ${BLUE}.${RESET} (ponto)              ${SUBTEXT0}‚Üí Alterna a exibi√ß√£o de arquivos ocultos${RESET}"
    echo -e "  ${BLUE}\" \"${RESET} (espa√ßo)           ${SUBTEXT0}‚Üí Seleciona m√∫ltiplos arquivos${RESET}"
    echo ""
    echo -e "  ${LAVENDER}Abas e pesquisa:${RESET}"
    echo -e "  ${BLUE}Tab${RESET}                    ${SUBTEXT0}‚Üí Alterna entre as abas do Yazi${RESET}"
    echo -e "  ${BLUE}/${RESET}                      ${SUBTEXT0}‚Üí Inicia o modo de pesquisa${RESET}"
    echo -e "  ${BLUE}q${RESET}                      ${SUBTEXT0}‚Üí Fecha o Yazi${RESET}"
}

show_system() {
    clear
    echo -e "${MAUVE}${ICON_INFO} Informa√ß√µes do sistema:${RESET}"
    echo -e "${BLUE}fastfetch${RESET}                ${SUBTEXT0}‚Üí Mostra informa√ß√µes gerais${RESET}"
    echo -e "${BLUE}htop${RESET}                     ${SUBTEXT0}‚Üí Monitor de tarefas (interativo)${RESET}"
    echo -e "${BLUE}free -h${RESET}                  ${SUBTEXT0}‚Üí Uso de mem√≥ria RAM e swap${RESET}"
    echo -e "${BLUE}df -h${RESET}                    ${SUBTEXT0}‚Üí Espa√ßo em disco${RESET}"
    echo -e "${BLUE}uptime${RESET}                   ${SUBTEXT0}‚Üí Tempo de atividade do sistema${RESET}"
}

show_tmux() {
    clear
    echo -e "${MAUVE}${ICON_TMUX} Multiplexador de Terminal (tmux):${RESET}"
    echo -e "${TEXT}  Sess√µes = Projetos | Janelas = Abas | Pain√©is = Divis√µes${RESET}"
    echo ""
    echo -e "  ${LAVENDER}FORA do tmux (gerenciar sess√µes):${RESET}"
    echo -e "  ${BLUE}tmux new -s <nome>${RESET}     ${SUBTEXT0}‚Üí Cria e entra em uma nova sess√£o${RESET}"
    echo -e "  ${BLUE}tmux ls${RESET}                ${SUBTEXT0}‚Üí Lista todas as sess√µes ativas${RESET}"
    echo -e "  ${BLUE}tmux attach -t <nome>${RESET}  ${SUBTEXT0}‚Üí Anexa (entra) em uma sess√£o existente${RESET}"
    echo ""
    echo -e "  ${LAVENDER}DENTRO do tmux (atalhos com o prefixo 'Ctrl + b'):${RESET}"
    echo -e "  ${BLUE}Ctrl+b %${RESET}               ${SUBTEXT0}‚Üí Divide a tela na VERTICAL${RESET}"
    echo -e "  ${BLUE}Ctrl+b \"${RESET}               ${SUBTEXT0}‚Üí Divide a tela na HORIZONTAL${RESET}"
    echo -e "  ${BLUE}Ctrl+b <setas>${RESET}         ${SUBTEXT0}‚Üí Navega entre os pain√©is${RESET}"
    echo -e "  ${BLUE}Ctrl+b d${RESET}               ${SUBTEXT0}‚Üí Desanexa da sess√£o (deixa rodando)${RESET}"
    echo -e "  ${BLUE}Ctrl+b c${RESET}               ${SUBTEXT0}‚Üí Cria uma nova janela (aba)${RESET}"
    echo -e "  ${BLUE}Ctrl+b w${RESET}               ${SUBTEXT0}‚Üí Lista as janelas de forma interativa${RESET}"
}

# Adicione aqui outras fun√ß√µes para as se√ß√µes restantes (Rede, Arquivos, etc.)
# seguindo o mesmo modelo.

# ----------------------------------------------------------------------
#  ÔÉâ MENU PRINCIPAL (LOOP COM FZF)
# ----------------------------------------------------------------------
while true; do
    # Lista de op√ß√µes para o fzf
    options="${ICON_PACKAGE} Pacman - Pacotes Oficiais\n"
    options+="${ICON_AUR} AUR - Reposit√≥rio Comunit√°rio\n"
    options+="${ICON_ZSH} ZSH - Plugins e Atalhos\n"
    options+="${ICON_YAZI} Yazi - Gerenciador de Arquivos\n"
    options+="${ICON_GIT} Git - Controle de Vers√£o\n"
    options+="${ICON_TMUX} Tmux - Multiplexador de Terminal\n"
    options+="${ICON_INFO} System - Informa√ß√µes do Sistema\n"
    options+="${RED}${ICON_EXIT} Sair${RESET}"

    # O fzf cria o menu. Usamos --ansi para que ele mostre as cores e √≠cones.
    # A sele√ß√£o do usu√°rio √© guardada na vari√°vel 'selection'
    selection=$(echo -e "$options" | fzf \
        --prompt " ${MAUVE} Selecione uma categoria > ${RESET}" \
        --height="~50%" \
        --border=rounded \
        --header " ${TEXT}AJUDA R√ÅPIDA DE COMANDOS ${ICON_ARCH}${RESET}" \
        --pointer="ÔÅ° " \
        --marker="‚óâ " \
        --cycle \
        --ansi)

    # O 'case' verifica a escolha do usu√°rio e chama a fun√ß√£o correspondente
    # Usamos '*' no final para ignorar as cores e focar no texto da op√ß√£o
    case "$selection" in
        *"Pacman"*)
            show_pacman
            ;;
        *"AUR"*)
            show_aur
            ;;
        *"ZSH"*)
            show_zsh
            ;;
        *"Yazi"*)
            show_yazi
            ;;
        *"Git"*)
            show_git
            ;;
        *"Tmux"*)
            show_tmux
            ;;
        *"System"*)
            show_system
            ;;
        *"Sair"*)
            clear
            break # Quebra o loop e encerra o script
            ;;
    esac

    # Pede para o usu√°rio pressionar uma tecla para voltar ao menu principal
    # Isso s√≥ acontece se uma categoria foi exibida (e n√£o se "Sair" foi escolhido)
    if [[ -n "$selection" ]]; then
        echo -e "\n${SUBTEXT0}[ Pressione qualquer tecla para voltar ao menu ]${RESET}"
        read -n 1 -s -r
    fi
done

echo -e "${GREEN}At√© logo!${RESET}"